---

#- name: Change user dirs language, Japanese to English
#  shell: "LANG=C xdg-user-dirs-gtk-update"

# - name: Delete user-dirs.dirs
#   file:
#     path: "{{ lookup('env', 'HOME') }}/.config/user-dirs.dirs"
#     state: absent
# 
# - name: Create link user-dirs.dirs
#   file:
#     src: "{{ lookup('env', 'HOME') }}/src/github.com/jiro4989/dotfiles/user-dirs.dirs"
#     dest: "{{ lookup('env', 'HOME') }}/.config/user-dirs.dirs"
#     state: link
#
# - name: Make user directories
#   file:
#     path: "{{ lookup('env', 'HOME') }}/{{ item }}"
#     state: directory
#   with_items:
#     - desktop
#     - download
#     - template
#     - public
#     - document
#     - music
#     - picture
#     - video

- name: Create user
  user:
    name: "{{usergroup.user.name}}"
    group: "{{usergroup.user.group}}"

- name: Make config directory
  become_user: "{{usergroup.user.name}}"
  file:
    path: "{{ lookup('env', 'HOME') }}/.config"
    state: directory

- name: Install minikube
  get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    dest: /usr/local/bin/minikube
    mode: 0755
    owner: root
    group: root

- name: Starting snapd
  systemd:
    name: snapd
    state: started

    # - name: Create /snap link
    #   become: true
    #   file:
    #     src: /var/lib/snapd/snap
    #     dest: /snap
    #     state: link

# TODO: if ansible version is over 2.8 then change module 'shell' to 'snap'.
- name: Install snap packages (need too long time)
  become: true
  shell: "snap install {{ item }} --classic"
  with_items:
          #- conjure-up
          #- chromium
    - hub

# # TODO: if ansible version is over 2.8 then change module 'shell' to 'snap'.
# - name: Install foobar2000 (need too long time)
#   become: true
#   shell: "snap install {{ item }}"
#   with_items:
#     - pulseaudio
#     - discord

- name: Upgrade pip
  become: true
  ignore_errors: true
  pip:
    name:
      - pip
    executable: pip3
    state: latest

- name: Install pip modules
  become: true
  ignore_errors: true
  pip:
    name:
      #- pynvim
      - python-language-server
    executable: pip3
    state: latest

- name: Mkdir lf src
  become: true
  file:
    path: /usr/local/src/lf/r10
    state: directory
    recurse: true
    mode: 0755
    owner: root
    group: root

- name: Install terminal filer
  become: true
  get_url:
    url: "https://github.com/gokcehan/lf/releases/download/r10/lf-linux-amd64.tar.gz"
    dest: /usr/local/src/lf/r10/lf-linux-amd64.tar.gz

- name: Unarchive lf
  become: true
  unarchive:
    src: /usr/local/src/lf/r10/lf-linux-amd64.tar.gz
    dest: /usr/local/bin
    mode: 0755
    owner: root
    group: root

- name: Starting Bluetooth
  become: true
  systemd:
    name: bluetooth
    state: started

- name: Bluetooth auto enable
  become: true
  lineinfile:
    dest: /etc/bluetooth/main.conf
    state: present
    line: AutoEnable=true

- name: Fcitx .profile
  become: true
  blockinfile:
    dest:  "{{ lookup('env', 'HOME') }}/.profile"
    state: present
    content: |
      export DefaultImModule=ibus
      export GTK_IM_MODULE=ibus
      export QT_IM_MODULE=ibus
      export XMODIFIERS="@im=ibus"
      ibus-daemon -drx

- name: Create tmux.conf link
  file:
    src: "{{ lookup('env', 'HOME') }}/src/github.com/jiro4989/dotfiles/tmux.conf"
    dest:  "{{ lookup('env', 'HOME') }}/.tmux.conf"
    state: link

