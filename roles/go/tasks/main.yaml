---

- name: Mkdir download directory
  become: true
  file:
    path: "{{ work_dir }}"
    state: directory

- name: Download go source
  become: true
  get_url:
    url: "{{ download_url }}"
    dest: "{{ archive_file }}"

- name: Unarchive go source
  become: true
  unarchive:
    src: "{{ archive_file }}"
    dest: "{{ work_dir }}"

- name: Put go command
  become: true
  file:
    src: "{{ source_dir }}/bin/go"
    dest: "{{ base_dir }}/bin/go"
    state: link

- name: Install golang modules
  shell: "GOPATH={{ GOPATH }} GO111MODULE=off go get -u {{ item }}"
  ignore_errors: true
  with_items:
    - "github.com/motemen/ghq"
    - "golang.org/x/tools/cmd/godoc"
    - "github.com/tcnksm/ghr"
    - "github.com/atotto/clipboard/cmd/gocopy"
    - "github.com/derekparker/delve/cmd/dlv"
    - "github.com/alecthomas/gometalinter"
    - "github.com/hhatto/gocloc/cmd/gocloc"
    - "github.com/mitchellh/gox"
    - "github.com/mvdan/sh/cmd/shfmt"
    - "github.com/peco/peco/cmd/peco/..."
    - "github.com/ChimeraCoder/gojson/gojson"
    - "golang.org/x/tools/cmd/gopls"
    - "github.com/mattn/twty"
    - "github.com/greymd/ojichat"
    - "github.com/jiro4989/textimg"
    - "github.com/xztaityozx/owari"
    - "github.com/jiro4989/align"

- name: ghq get jiro4989 repositories
  shell: "{{ GOPATH }}/bin/ghq get jiro4989/{{ item }}"
  with_items:
    - "dotfiles"
    - "setup"
    - "workspace"
    - "text-proofreading"
    - "textimg"
    - "super_unko"
  ignore_errors: true
